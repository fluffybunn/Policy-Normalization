using DAL.BusinessObjects;
using DevExpress.Xpo;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using DevExpress.Data.ODataLinq.Helpers;

namespace PolicyNormal.Module.BusinessObjects
{
    [DSDefaultClassOptions]
    [DefaultProperty(nameof(PolicyNumber))]
    public class Policy : DSEntityBase<Policy>
    {
        public Policy(Session session) : base(session) { }

        [DSXafDisplayName("პატალა ვატალა")]
        public string PolicyNumber { get; set; }
        [Association(nameof(Human.InsuredPolicies))] public Human InsuredHuman { get; set; }
        [Association(nameof(Human.InsurerPolicies))] public Human InsurerHuman { get; set; }
        public VehicleMark VehicleMark { get; set; }
        // DataSourceCriteria
        // DataSourceProperty
        // 
        //[DataSourceCriteria]
        //public List<Car> GetCarsByVehicleType
        //    => Session.Query<Car>().Where(c => c.VehicleModel.VehicleMark == VehicleMark).ToList();
        

        [Association]//, DSDataSourceProperty(nameof(GetCarsByVehicleType))]
        public Car Car { get; set; }

        [DSImmediatePostData] public DateTime FromDate { get; set; }
        public DateTime ToDate { get; set; }

        override protected void OnSaving()
        {
            base.OnSaving();

            ToDate = FromDate.AddYears(1);
        }

        public override void AfterConstruction()
        {
            base.AfterConstruction();

            FromDate = DateTime.Now.Date;
        }

        protected override void OnChanged(string propertyName, object oldValue, object newValue)
        {
            base.OnChanged(propertyName, oldValue, newValue);

            Trace.WriteLine($"Output generated by OnChanged: {nameof(propertyName)} = [{propertyName}], oldValue = [{oldValue}], newValue = [{newValue}]");
        }

        //[Action(PredefinedCategory.ObjectsCreation)]
        public void ValidateAction()
        {
            //FromDate = DateTime.Now.Date.AddDays(-DateTime.Now.Day + 1);
            //FromDate = fromDateToDate.FromDate;
            //ToDate = fromDateToDate.ToDate;
        }

       
    }


}
